---
import BaseLayout from "../../layouts/BaseLayout.astro";
---
<BaseLayout title="ドキュメント — ruuley" canonical="/docs/">
  <section class="hero container">
    <h1>ドキュメント</h1>
    <p>JSON-IR と Validation Gate の概念とアプローチ</p>
  </section>

  <section class="container">
    <h2>JSON-IR とは</h2>
    <div class="card">
      <p>JSON-IR（JSON Intermediate Representation）は、法令や規程を構造化し、計算可能な形式に変換するための中間表現です。</p>
      <h3>主な特徴</h3>
      <ul>
        <li><strong>構造化</strong>: 法令条文を階層的なデータ構造として表現</li>
        <li><strong>計算可能</strong>: 複数のバックエンド（推論エンジン、証明支援系、コード生成）に対応</li>
        <li><strong>トレーサビリティ</strong>: 元のテキストとの対応関係を witness として保持</li>
        <li><strong>バージョン管理</strong>: スキーマバージョニングによる互換性管理</li>
      </ul>
    </div>
  </section>

  <section class="container">
    <h2>パイプライン</h2>
    <div class="card">
      <p>法令から実行可能なコードまで、段階的に変換するプロセス：</p>
      <ol>
        <li><strong>Law（法令テキスト）</strong> → CNL（制御自然言語）</li>
        <li><strong>CNL</strong> → AST（抽象構文木）</li>
        <li><strong>AST</strong> → SNF（セマンティック正規形）</li>
        <li><strong>SNF</strong> → Surface+（編集・トレース情報付き）</li>
        <li><strong>Surface+</strong> → Pre-pass（前処理・整形）</li>
        <li><strong>Pre-pass</strong> → Core（計算用最終形）</li>
        <li><strong>Core</strong> → Validation Gate（品質チェック）</li>
        <li><strong>統合</strong> → Integration Bundle（マルチ記事統合）</li>
        <li><strong>コード生成</strong> → バックエンド（Soufflé/Z3/Lean/DMN等）</li>
      </ol>
    </div>
  </section>

  <section class="container">
    <h2>Validation Gate</h2>
    <div class="grid">
      <div class="card">
        <h3>統一診断</h3>
        <p>スキーマ検証、構造チェック、セマンティック検証を統合した診断システム。エラーカテゴリごとに分類されます。</p>
      </div>
      <div class="card">
        <h3>Fail-Closed 運用</h3>
        <p>品質が保証されない限り、次のステップ（コード生成・統合）に進めない仕組み。すべてのチェックが合格するまでブロックされます。</p>
      </div>
      <div class="card">
        <h3>バックエンド別ポリシー</h3>
        <p>各バックエンドの特性に応じた評価ポリシー。一部のバックエンドではブロックされる問題も、他のバックエンドでは警告または許可される場合があります。</p>
      </div>
    </div>
  </section>

  <section class="container">
    <h2>品質の柱</h2>
    <div class="card">
      <p>JSON-IR の品質は以下の5つの柱で支えられています：</p>
      <ul>
        <li><strong>典拠（Provenance）</strong>: データの出所と変換履歴</li>
        <li><strong>証跡（Witness）</strong>: Core と Surface+ の対応関係</li>
        <li><strong>同値性（Parity）</strong>: 変換前後での意味の一貫性</li>
        <li><strong>再現性（Versioning）</strong>: スキーマバージョンによる互換性管理</li>
        <li><strong>安全性（CI Gate）</strong>: 自動検証による品質保証</li>
      </ul>
    </div>
  </section>

  <section class="container">
    <h2>評価指標</h2>
    <div class="card">
      <p>Validation Gate では、以下のような評価指標を使用します：</p>
      <ul>
        <li>エラーカテゴリ別の診断（構造、セマンティクス、トレーサビリティ）</li>
        <li>バックエンド別の適合性評価</li>
        <li>トレーサビリティカバレッジ（witness マップの完全性）</li>
        <li>統合時の一貫性チェック（語彙・述語の重複・不整合）</li>
      </ul>
    </div>
  </section>

  <section class="container">
    <h2>サポート</h2>
    <div class="card">
      <p>JSON-IR や Validation Gate についてご質問がある場合は、お気軽にお問い合わせください：</p>
      <p><a href="/contact" class="button">お問い合わせ</a></p>
    </div>
  </section>
</BaseLayout>
