---
import BaseLayout from "../../../layouts/BaseLayout.astro";
---
<BaseLayout title="Documentation ‚Äî ruuley" canonical="/en/docs/">
  <section class="hero container">
    <h1>Documentation</h1>
    <p>Concepts and approaches of JSON-IR and Validation Gate</p>
  </section>

  <section class="container">
    <h2>What is JSON-IR</h2>
    <div class="card">
      <p>JSON-IR (JSON Intermediate Representation) is an intermediate representation for structuring laws and regulations and converting them into computable formats.</p>
      <h3>Key Features</h3>
      <ul>
        <li><strong>Structured</strong>: Represents legal provisions as hierarchical data structures</li>
        <li><strong>Computable</strong>: Compatible with multiple backends (inference engines, proof assistants, code generation)</li>
        <li><strong>Traceability</strong>: Maintains correspondence with original text as witness</li>
        <li><strong>Version Management</strong>: Compatibility management through schema versioning</li>
      </ul>
    </div>
  </section>

  <section class="container">
    <h2>Pipeline</h2>
    <div class="card pipeline-card">
      <div class="pipeline-visual">
        <div class="pipeline-step">
          <div class="step-icon">üìÑ</div>
          <div class="step-label">Legal Text</div>
        </div>
        <div class="pipeline-arrow">‚Üí</div>
        <div class="pipeline-step">
          <div class="step-icon">üîç</div>
          <div class="step-label">Analysis</div>
        </div>
        <div class="pipeline-arrow">‚Üí</div>
        <div class="pipeline-step">
          <div class="step-icon">‚ú®</div>
          <div class="step-label">Edit & Verify</div>
        </div>
        <div class="pipeline-arrow">‚Üí</div>
        <div class="pipeline-step">
          <div class="step-icon">üîí</div>
          <div class="step-label">Quality Check</div>
        </div>
        <div class="pipeline-arrow">‚Üí</div>
        <div class="pipeline-step">
          <div class="step-icon">‚ö°</div>
          <div class="step-label">Code Generation</div>
        </div>
      </div>
      <p class="pipeline-description">A seamless transformation process from legal text through structuring, editing, verification, and quality assurance to executable code.</p>
    </div>
  </section>
<style>
  .pipeline-card {
    text-align: center;
  }
  .pipeline-visual {
    display: flex;
    align-items: center;
    justify-content: center;
    flex-wrap: wrap;
    gap: var(--spacing-md);
    margin: var(--spacing-xl) 0;
    padding: var(--spacing-xl);
    background: linear-gradient(135deg, rgba(93,214,255,.05) 0%, rgba(93,214,255,.02) 100%);
    border-radius: var(--radius-lg);
    border: 1px solid rgba(93,214,255,.1);
  }
  .pipeline-step {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: var(--spacing-sm);
    min-width: 100px;
  }
  .step-icon {
    font-size: 32px;
    margin-bottom: var(--spacing-xs);
  }
  .step-label {
    font-size: 14px;
    font-weight: 600;
    color: var(--fg-secondary);
  }
  .pipeline-arrow {
    font-size: 24px;
    color: var(--accent);
    font-weight: 300;
  }
  .pipeline-description {
    margin-top: var(--spacing-lg);
    color: var(--muted);
    line-height: 1.7;
  }
  @media (max-width: 768px) {
    .pipeline-visual {
      flex-direction: column;
    }
    .pipeline-arrow {
      transform: rotate(90deg);
    }
  }
</style>

  <section class="container">
    <h2>Validation Gate</h2>
    <div class="grid">
      <div class="card">
        <h3>Unified Diagnostics</h3>
        <p>A diagnostic system integrating schema validation, structure checks, and semantic verification. Categorized by error types.</p>
      </div>
      <div class="card">
        <h3>Strict Operations</h3>
        <p>A mechanism that prevents proceeding to the next step (code generation, integration) until quality is guaranteed. Blocks until all checks pass.</p>
      </div>
      <div class="card">
        <h3>Backend-Specific Policies</h3>
        <p>Evaluation policies tailored to each backend's characteristics. Issues that block some backends may be warnings or allowed in others.</p>
      </div>
    </div>
  </section>

  <section class="container">
    <h2>Pillars of Quality</h2>
    <div class="card">
      <p>JSON-IR quality is supported by five pillars:</p>
      <ul>
        <li><strong>Provenance</strong>: Recording data sources and transformation history</li>
        <li><strong>Witness</strong>: Maintaining correspondence between before and after transformation</li>
        <li><strong>Parity</strong>: Consistency of meaning before and after transformation</li>
        <li><strong>Reproducibility</strong>: Maintaining compatibility through version management</li>
        <li><strong>Safety</strong>: Quality assurance through automated verification</li>
      </ul>
    </div>
  </section>

  <section class="container">
    <h2>Evaluation Metrics</h2>
    <div class="card">
      <p>Validation Gate uses multi-layered evaluation metrics:</p>
      <ul>
        <li>Diagnostics across structure, semantics, and traceability</li>
        <li>Backend-specific compatibility assessment</li>
        <li>Traceability completeness evaluation</li>
        <li>Consistency checks during integration</li>
      </ul>
    </div>
  </section>

  <section class="container">
    <h2>Support</h2>
    <div class="card">
      <p>If you have questions about JSON-IR or Validation Gate, please feel free to contact us:</p>
      <p><a href="/en/contact" class="button">Contact Us</a></p>
    </div>
  </section>
</BaseLayout>

